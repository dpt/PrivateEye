# Project:		exiftags:

# Tools

x			= x

asm_			= objasm
cc_			= cc
cdir			= cdir
every_			= every.every2
libfile_		= libfile
link_			= link
wipe			= $(x) wipe

# Tool flags:

asmflags		= $(depend) $(throwback)
ccflags			= -apcs 3/32bit -c99 -strict -fah -arch 3 -cpu XScale -Otime -c $(depend) $(throwback) $(includes) $(ccextra)
everyflags		= -c
libfileflags		= -c
linkflags		= -c++
wipeflags		= ~CFR~V

# Combined tools and flags

asm			= $(asm_) $(asmflags)
cc			= $(cc_) $(ccflags)
every			= $(every_) $(everyflags)
libfile			= $(libfile_) $(libfileflags)
link			= $(link_) $(linkflags)

# Compiler options

depend			= -depend !Depend
throwback		= -throwback

# Library references

includes		= -IC:
libraries		= C:o.stubs

# Generated files

# The number of objects involved causes path buffers to overflow, so here we
# use a via file.

objs_normal  = \
#Makatic{ -V objs-normal
-F
-ff "c.*" "\t\t\t*2.o.#0 \\\n"
#Makatic}

objs_module = \
#Makatic{ -V objs-module
-F
-ff "c.*" "\t\t\t*2.om.#0 \\\n"
#Makatic}

objs_debug = \
#Makatic{ -V objs-debug
-F
-ff "c.*" "\t\t\t*2.odf.#0 \\\n"
#Makatic}

objs_apps = \
#Makatic{ -V objs-apps
-F
-ff "other.c.*" "\t\t\t*2.o.#0 \\\n"
#Makatic}


# Targets:

o.exiftags:		$(objs_normal)
			$(libfile) -o o.exiftags -via objs-normal

om.exiftags:		$(objs_module)
			$(libfile) -o om.exiftags -via objs-module

odf.exiftags:		$(objs_debug)
			$(libfile) -o odf.exiftags -via objs-debug

exifcom:		$(objs_apps) $(objs_normal)
			$(link) -o exifcom other.o.exifcom other.o.getopt $(objs_normal) $(libraries)

exiftags:		$(objs_apps) $(objs_normal)
			$(link) -o exiftags other.o.exiftags other.o.getopt $(objs_normal) $(libraries)

exiftime:		$(objs_apps) $(objs_normal)
			$(link) -o exiftime other.o.exiftime other.o.getopt $(objs_normal) $(libraries)

normal:			o.exiftags
			@echo 'normal' built

module:			om.exiftags
			@echo 'module' built

debug:			odf.exiftags
			@echo 'debug' built

apps:			exifcom exiftags exiftime
			@echo 'apps' built

all:			debug module normal apps
			@echo 'all' built

clean:;			$(every) "@...o @...om @...odf" -d "$(wipe) %0 $(wipeflags)"
			$(wipe) Makefile $(wipeflags)
			$(wipe) objs-*	 $(wipeflags)
			@echo Cleaned

# Rule Patterns

.SUFFIXES:		.o .om .odf

.s.o:;			$(asm) -from $< -to $@
.c.o:;			$(cc) -ff -DNDEBUG -o $@ $<

.s.om:;			$(asm) -from $< -to $@
.c.om:;			$(cc) -ff -DNDEBUG -zM -o $@ $<

.s.odf:;		$(asm) -from $< -to $@ -g
.c.odf:;		$(cc) -fn -g -DFORTIFY -o $@ $<

# User-editable dependencies:

# Static dependencies:

# Dynamic dependencies:
